write(0xa494, 0x0000);
write(0xa462, 0x0000);
write(0xa460, 0x0000);
write(0xa494, 0x000d);
write(0x8130, 0x0000);
write(0x8132, 0x0000);
write(0x8134, 0x0000);
write(0x8136, 0x0000);
write(0x8138, 0x0000);
write(0x813a, 0x0000);
write(0x813c, 0x0000);
write(0x813e, 0x0000);
write(0x8140, 0x0000);
write(0x8142, 0x0000);
write(0x8144, 0x0000);
write(0x8146, 0x0000);
write(0x8148, 0x0000);
write(0x814a, 0x0000);
write(0x9c04, 0x0003);
write(0x0012, 0x0008);
write(0x0014, 0xc001);
write(0x0016, 0x102a);
write(0x0018, 0xc001);
if (read_mask(0x0000, 0x0003)!=0x0003) {
    write(0x001a, 0x0028);
} else {
    write(0x001a, 0x1028);
}
write(0x001c, 0xc004);
if (read_mask(0x0000, 0x0003)!=0x0003) {
    write(0x001e, 0x0aaa);
} else {
    write(0x001e, 0x3aaa);
}
write(0x0020, 0x0a2a);
if (read_mask(0x0000, 0x0003)!=0x0003) {
    write(0x0022, 0x3c00);
} else {
    write(0x0022, 0x3f00);
}
write(0x0024, 0x9000);
write(0x0026, 0x3000);
write(0x0028, 0xc000);
write(0x002a, 0x3000);
write(0x0030, 0x8001);
write(0x0032, 0x7000);
write(0x0034, 0x8001);
write(0x0036, 0xf000);
write(0x0038, 0x9001);
write(0x003A, 0xa000);
write(0x003C, 0x8000);
write(0x003e, 0x7000);
write(0x0040, 0x8009);
write(0x0042, 0x0000);
write(0x0044, 0xf000);
write(0x0046, 0x100a);
write(0x0048, 0x7000);
write(0x004c, 0xc000);
if (read_mask(0x0000, 0x0003)!=0x0003) {
    write(0x004e, 0x003f);
} else {
    write(0x004e, 0x803f);
}
write(0x005c, 0x0400);
write(0x0060, 0x8000);
write(0x0062, 0x0008);
write(0x0064, 0x0000);
write(0x0016, 0x002a);
write(0x001a, 0x0028);
write(0x001e, 0x0aaa);
write(0x0020, 0x0a2a);
write(0x0022, 0x0000);
write(0x0026, 0x0000);
write(0x002a, 0x0000);
write(0x0032, 0x0000);
write(0x0036, 0x0000);
write(0x003e, 0x0000);
write(0x0042, 0x0000);
write(0x0044, 0x0000);
write(0x0046, 0x0000);
write(0x0048, 0x0000);
write(0x004e, 0x003a);
write(0x005c, 0x0400);
write(0x0060, 0x0000);
write(0x0062, 0x0000);
write(0x0080, 0x018F);
write(0xb010, 0x000c);
if (read_mask(0x0000, 0x6000)==0x4000) {
    write(0x8096, 0xfffc);
    write(0x809a, 0xfffc);
    write(0x80d4, 0x0073);
    write(0x80d8, 0x0073);
} else if (read_mask(0x0000, 0x6000)==0x0000) {
    write(0x8096, 0xfffc);
    write(0x809a, 0xfffc);
    write(0x80d4, 0x0073);
    write(0x80d8, 0x0073);
}
write(0x0010, 0x5000);
write(0x00a0, 0x450c);
write(0x00a2, 0x0302);
write(0x00a4, 0x2320);
write(0x00a4, 0x3320);
write(0x00a4, 0x2320);
write(0x0010, 0x4803);
write(0x0200, 0x0000);
write(0x0210, 0x0002);
write(0x0214, 0x0c00);
write(0x03da, 0x7508);
write(0x03de, 0x000f);
if (read_mask(0x0000, 0x1000)==0x0000) {
    if (read_mask(0x0000, 0x6000)==0x4000) {
        if (read_mask(0xDE000014, 0x0002)==0x0002) {
            write(0x0300, 0x3298);
        } else {
            write(0x0300, 0xb298);
        }
    } else {
        if (read_mask(0xDE000014, 0x0002)==0x0002) {
            write(0x0300, 0x32a8);
        } else {
            write(0x0300, 0xb2a8);
        }
    }
    write(0x030a, 0x0025);
    write(0x0310, 0x1a22);
    write(0x0312, 0x6412);
    write(0x0314, 0x0028);
    write(0x0316, 0x1000);
    write(0x0318, 0x2208);
    write(0x031a, 0x2000);
    write(0x031c, 0x6121);
} else {
    if (read_mask(0x0000, 0x6000)==0x4000) {
        if (read_mask(0xDE000014, 0x0002)==0x0002) {
            write(0x0300, 0x3298);
        } else {
            write(0x0300, 0xb298);
        }
    } else {
        if (read_mask(0xDE000014, 0x0002)==0x0002) {
            write(0x0300, 0x32a8);
        } else {
            write(0x0300, 0xb2a8);
        }
    }
    write(0x030a, 0x0025);
    write(0x0310, 0x1a22);
    write(0x0312, 0x6412);
    write(0x0314, 0x0028);
    write(0x0316, 0x1000);
    write(0x0318, 0x2208);
    write(0x031a, 0x2000);
    write(0x031c, 0x6121);
}
write(0x0340, 0x2a40);
write(0x0340, 0x2a44);
write(0x0340, 0x3a44);
write(0x0340, 0x2a44);
write(0x0342, 0x0882);
write(0x0320, 0x704a);
write(0x0322, 0x0a4a);
write(0x0324, 0x0a4a);
write(0x0320, 0xf04a);
if (read_mask(0x0000, 0x1000)==0x0000) {
    write(0x0348, 0xe002);
    write(0x0334, 0x0000);
    write(0x0336, 0xeec0);
    write(0x0330, 0x8000);
    write(0x0332, 0x1400);
    write(0x0396, 0xa000);
    write(0x0338, 0x0000);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0080);
    write(0x0338, 0x0001);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0081);
    write(0x0338, 0x0002);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0082);
    write(0x0338, 0x0003);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0083);
    write(0x0338, 0x0004);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0084);
    write(0x0338, 0x0005);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0085);
    write(0x0338, 0x0006);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0086);
    write(0x0338, 0x0007);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0087);
    write(0x0338, 0x0008);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0088);
    write(0x0338, 0x0009);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0089);
    write(0x0338, 0x000a);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008a);
    write(0x0338, 0x000b);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008b);
    write(0x0338, 0x000c);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008c);
    write(0x0338, 0x000d);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008d);
    write(0x0338, 0x000e);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008e);
    write(0x0338, 0x000f);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008f);
    write(0x0338, 0x8200);
    write(0x0320, 0xf84a);
    write(0x0304, 0x8000);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0x8800);
    write(0x0316, 0x1180);
    wait(1);
    write(0x0304, 0xc000);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0x8800);
    wait(1);
    write(0x0304, 0x4000);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0x8800);
    wait(1);
    write(0x0304, 0x0162);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0x8800);
    wait(1);
    write(0x0304, 0x0862);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0xc800);
    wait(1);
    write(0x0304, 0x43c0);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0x8800);
    wait(1);
    write(0x0304, 0x4042);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0xc880);
    wait(1);
} else {
    write(0x0348, 0xe002);
    write(0x0334, 0x0000);
    write(0x0336, 0xeec0);
    write(0x0330, 0x8000);
    write(0x0332, 0x1400);
    write(0x0396, 0xa000);
    write(0x0338, 0x0000);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0080);
    write(0x0338, 0x0001);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0081);
    write(0x0338, 0x0002);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0082);
    write(0x0338, 0x0003);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0083);
    write(0x0338, 0x0004);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0084);
    write(0x0338, 0x0005);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0085);
    write(0x0338, 0x0006);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0086);
    write(0x0338, 0x0007);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0087);
    write(0x0338, 0x0008);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0088);
    write(0x0338, 0x0009);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x0089);
    write(0x0338, 0x000a);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008a);
    write(0x0338, 0x000b);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008b);
    write(0x0338, 0x000c);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008c);
    write(0x0338, 0x000d);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008d);
    write(0x0338, 0x000e);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008e);
    write(0x0338, 0x000f);
    write(0x033a, 0x0f0f);
    write(0x0338, 0x008f);
    write(0x0338, 0x8200);
    write(0x0320, 0xf84a);
    write(0x0304, 0x8000);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0x8800);
    write(0x0316, 0x1180);
    wait(1);
    write(0x0304, 0xc000);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0x8800);
    wait(1);
    write(0x0304, 0x4000);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0x8800);
    wait(1);
    write(0x0304, 0x0162);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0x8800);
    wait(1);
    write(0x0304, 0x0862);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0xc800);
    wait(1);
    write(0x0304, 0x43c0);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0x8800);
    wait(1);
    write(0x0304, 0x4042);
    write(0x0308, 0x0800);
    wait(1);
    write(0x0308, 0xc880);
    wait(1);
}
write(0x0376, 0x0100);
write(0x0378, 0x0302);
write(0x037a, 0x0504);
write(0x037c, 0x0706);
write(0x037e, 0x1413);
write(0x0380, 0x0908);
write(0x0382, 0x0b0a);
write(0x0384, 0x100c);
write(0x0386, 0x0f0e);
write(0x0388, 0x110d);
write(0x038a, 0x1512);
write(0x03a6, 0x0000);
write(0x03aa, 0x03ff);
write(0x03a8, 0x0000);
write(0x03a8, 0x0300);
wait(25*1000);
write(0x03a8, 0x0000);
write(0x03a8, 0x0310);
wait(25*1000);
write(0x0338, 0x0200);
if (0) {
    if (read_mask(0x0000, 0x0003)!=0x0003) {
        if (read_mask(0xde50002c, 0x7e000000) != 0x02000000) {
            write(0x0308, 0xc800);
            wait(50*1000);
            goto(0x800001c0);
        }
    }
}
